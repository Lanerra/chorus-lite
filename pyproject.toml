[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "chorus-lite"
version = "0.5"
description = "An autonomous, agentic, creative-writing system."
authors = ["Lanerra@Github (Dennis)"]
readme = "README.md"
packages = [{include = "chorus", from = "src"}]

[tool.poetry.scripts]
chorus = "chorus.web.main:app"

[tool.poetry.dependencies]
python = "^3.12"
psycopg = {version = "3.2.9", extras = ["binary"]}
pgvector = "^0.3.0"
fastapi = "0.111.1"
pydantic = "2.8.2"
litellm = "1.42.5"
uvicorn = "0.30.1"
python-dotenv = "1.1.1"
PyYAML = "6.0.1"
alembic = "1.16.4"
sqlalchemy = "2.0.31"
tenacity = "8.2.2"
dirtyjson = "1.0.8"
langgraph = "0.5.4"
greenlet = "3.0.3"
# spaCy runtime for NER scaffold (no fine-tuning)
pip-tools = "^7.5.0"
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.5.0"
mypy = "1.10.0"
pytest = "8.2.0"
pytest-cov = "5.0.0"
types-PyYAML = "6.0.12.20240311"
langgraph-checkpoint-postgres = "^2.0.23"
trio = "^0.30.0"
pytest-asyncio = "^1.1.0"
# Performance testing dependencies
psutil = "^6.1.0"
websockets = "^13.0"
aiofiles = "^24.1.0"
[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = ["F", "B", "I", "UP"] # flake8, flake8-bugbear, isort, pyupgrade
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
namespace_packages = true
show_error_codes = true
# Enable the Pydantic plugin for enhanced type checking
plugins = ["pydantic.mypy"]
# Specifies the path for mypy to check
files = "src/"

[[tool.mypy.overrides]]
module = "chorus.config.config"
ignore_errors = true

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--cov=src/chorus",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--tb=short",
    "--strict-markers",
    "--asyncio-mode=auto"
]
testpaths = ["tests"]
asyncio_mode = "auto"
timeout = 300
markers = [
    "performance: marks tests as performance tests (deselect with '-m \"not performance\"')",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running tests",
    "unit: marks tests as unit tests",
    "websocket: marks tests that use WebSocket functionality",
    "checkpoint: marks tests that use checkpoint functionality",
    "ui: marks tests that test UI performance",
    "fault_injection: marks tests that inject faults for testing",
    "load_test: marks tests that perform load testing"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:unclosed.*:ResourceWarning"
]

[tool.coverage.run]
branch = true
source = ["src/chorus"]
omit = [
    "src/chorus/langgraph/integration.py",
    "src/chorus/langgraph/checkpointer.py",
    "tests/performance/*",
    "scripts/*",
    "src/chorus/web/static/*",
    "src/chorus/web/templates/*"
]
concurrency = ["thread", "greenlet"]

[tool.coverage.report]
show_missing = true
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
